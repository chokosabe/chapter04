# -*- coding: utf-8 -*-
"""SAC-Rllib-test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HoIQqvR20w3gt5Ptxv5v55of3Bs12bGf
"""


# from google.colab import files
# from google.colab import drive

# Mount gdrive and set file path
# drive.mount("/content/gdrive")
# result_path = "/content/gdrive/My Drive/Colab Notebooks/data/"
# raw_path = "/content/gdrive/My Drive/RAW/"

# Imports
import os
import gym
from gym import spaces
from gym.utils import seeding
import numpy as np
from enum import Enum
import matplotlib.pyplot as plt

import pandas as pd
import argparse
import pprint
from ray import tune
from ray.tune.registry import register_env

import ray
from ray.rllib.agents.sac.sac import DEFAULT_CONFIG, SACTrainer as trainer

from hedge_env import HedgeEnv

ROOT_DIR = os.path.dirname(os.path.abspath(__file__))

wd = pd.read_pickle(ROOT_DIR + "/wd-sample")

len(wd)

num_rows = 600
# wd = wd.iloc[:, :num_rows]
wd = wd.astype("float32")
wd = wd.reset_index(drop=True)
env_config = {
    "window_size": 2,
    # "horizon": 3600,
    "df": wd,
}


def env_creator(env_config):
    return HedgeEnv(env_config)


register_env("HedgeEnv", env_creator)

wd.dtypes

from hedge_env import HedgeEnv

config = DEFAULT_CONFIG.copy()
config_update = {
    "env": "HedgeEnv",
    "env_config": env_config,
    # "num_gpus": 1,
    # "num_workers": 1,
    # "evaluation_num_workers": 2,
    # "evaluation_interval": 1,
}

config.update(config_update)
pp = pprint.PrettyPrinter(indent=4)
pp.pprint(config)


if __name__ == "__main__":
    ray.init(ignore_reinit_error=True)
    tune.run(trainer, stop={"timesteps_total": 3}, config=config)
